package com.Hubtel.Melcom;

import com.Hubtel.TestUtils.AndroidBaseTest;
import com.Hubtel.TestUtils.Listeners;
import com.Hubtel.TestUtils.reusecodes;
import io.appium.java_client.AppiumBy;
import io.appium.java_client.android.nativekey.AndroidKey;
import io.appium.java_client.android.nativekey.KeyEvent;
import org.testng.annotations.Test;

public class melcom extends AndroidBaseTest {

    @Test
    public void Melcom() throws InterruptedException {
        reusecodes UnifiedCheckout = new reusecodes(driver);
        reusecodes location = new reusecodes(driver);

        Listeners.logTestStart("ðŸ”ŽVerify Melcom Homepage Collections");
        Thread.sleep(5000);
        Listeners.executeStep(() ->circleAllGroceries.viewOrderDeleteAfterCheckoutpharm(),
                "ðŸ“œClear the cart if an item is pending in the cart.");

        Listeners.executeStep(() ->circleAllGroceries.clearOrder(),
                "ðŸ‘†Tap on clear Order is that pop up is visible");

        location.setLocation("circle","Circle VIP Station\n" +
                "Ring Road West, Accra, Ghana");

        Thread.sleep(2000);

        Listeners.executeStep(() -> melcom.scrollToElement("Melcom Plus - Kaneshie",503,1827,503,1827),
                "ðŸ“œScroll to Melcom tab on hubtel home screen");


        Listeners.executeStep(() ->driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Melcom Plus - Kaneshie\")")).isDisplayed(),
                "ðŸ§ªMelcom section should be beneath the 'All Groceries and All Meals card' with Melcom branch name");
Thread.sleep(1000);
        Listeners.executeStep(() ->melcom.setMelcomSection(),
                "ðŸ§ªVerifying if the total number of items under Melcom is up to 14");

Listeners.logTestStart("ðŸ”ŽVerify Clicking on the Header of Melcom Homepage Collections Open Melcom Shop");

        Listeners.executeStep(() ->melcom.melcomClick(),
                "ðŸ‘†Tapping on Melcom section beneath  'All Groceries and All Meals card'");

        Listeners.executeStep(() ->melcom.scheduleOrder(),
                "ðŸ‘†Tap on 'YES. SCHEDULE MY ORDER' button if visible on melcom home screen");


        Listeners.executeStep(() ->driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Melcom Plus - Kaneshie\")")).isDisplayed(),
                "ðŸ§ªMelcom branch name should be visible on Melcom Home Screen");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Otublohum Street, North Industrial Area, Kaneshie\")")).isDisplayed(),
                "ðŸ§ªLand mark to melcom should be visible");

        Listeners.executeStep(() ->driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().className(\"android.view.View\").instance(4)")).isEnabled(),
                "ðŸ§ªBack button should be visible on Melcom home screen");

        Listeners.executeStep(() ->driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().className(\"android.widget.ImageView\").instance(2)")).isEnabled(),
                "ðŸ§ªSearch button should be visible on Melcom home screen");
Thread.sleep(4000);
//        Listeners.executeStep(() ->melcom.swipeUntilElementVisible(),
//                "ðŸ§ªSwipe to the last element");
        Listeners.executeStep(() ->melcom.scroll(540,1039,0,0,"down"),
                "ðŸ“œScroll to view all product categories button");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().className(\"android.widget.ImageView\").instance(1)")).click(),
                "ðŸ‘†Tap on hamburger menu on melcom screen to view all product categories");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Baby Care\")")).isDisplayed(),
                "ðŸ§ª'Baby Care' should be visible on all products categories screen");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Fruits & Vegetables\")")).isDisplayed(),
                "ðŸ§ª'Fruits & Vegetables' should be visible on all products categories screen");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Meat, Seafood & Others\")")).isDisplayed(),
                "ðŸ§ª'Meat, Seafood & Others' should be visible on all products categories screen");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Dairy, Deli & Egg\")")).isDisplayed(),
                "ðŸ§ª'Dairy, Deli & Egg' should be visible on all products categories screen");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Personal Care\")")).isDisplayed(),
                "ðŸ§ª'Personal Care' should be visible on all products categories screen");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Snacks\")")).isDisplayed(),
                "ðŸ§ª'Snacks' should be visible on all products categories screen");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Alcohol\")")).isDisplayed(),
                "ðŸ§ª'Alcohol' should be visible on all products categories screen");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Ice Creams\")")).isDisplayed(),
                "ðŸ§ª'Ice Creams' should be visible on all products categories screen");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Bakery\")")).isDisplayed(),
                "ðŸ§ª'Bakery' should be visible on all products categories screen");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Oils & Sauces\")")).isDisplayed(),
                "ðŸ§ª'Oils & Sauces' should be visible on all products categories screen");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Household\")")).isDisplayed(),
                "ðŸ§ª'Household' should be visible on all products categories screen");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Food Cupboard\")")).isDisplayed(),
                "ðŸ§ª'Food Cupboard' should be visible on all products categories screen");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Beverages & Non-Alcoholic\")")).isDisplayed(),
                "ðŸ§ª'Beverages & Non-Alcoholic' should be visible on all products categories screen");

        Listeners.executeStep(() ->melcom.selectRandomElement(),
                "ðŸ“œRandomly select one element under all products categories screen");

Thread.sleep(1000);
        Listeners.logTestStart("ðŸ”ŽVerify Quick Add button on Melcom screen ");

        Listeners.executeStep(() ->melcom.quickAddFirst(),
                "ðŸ‘†Tap on the Add button on selected category screen");

        Listeners.executeStep(() ->melcom.viewOrderDesc(),
                "ðŸ§ªThe itemâ€™s price should match the price displayed on the â€˜View Orderâ€™ button.");


        Listeners.logTestStart("ðŸ”ŽVerify Delete Button for Quick Add button");

        Listeners.executeStep(() ->melcom.deleteButton(),
                "ðŸ‘†Tap on delete button on the selected item");

Thread.sleep(2000);

        Listeners.executeStep(() ->melcom.locationPop(),
                "ðŸ‘†Tap on the banner indicating location differences, if available.");

Listeners.logTestStart("ðŸ”ŽCheck Search functionalities On Featured Shop Screen");

//        Listeners.executeStep(() ->allMeals.scrollToQCTab(),
//                "ðŸ“œ Scroll down till different elements load");
//Thread.sleep(1000);
        Listeners.executeStep(() ->melcom.AddButtonCheck(),
                "ðŸ“œThis is the desc of the element selected");

        Listeners.executeStep(() ->driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().className(\"android.widget.ImageView\").instance(1)")).click(),
                "ðŸ‘†Tap on Search button on Melcom Featured home screen");

        Listeners.executeStep(() ->melcom.searchItem(),
                "ðŸ“œSearch using the selected item");
        Thread.sleep(1000);
        Listeners.executeStep(() ->  driver.pressKey(new KeyEvent().withKey(AndroidKey.ENTER)),
                "ðŸ‘†Tap on search button");
        Thread.sleep(2000);
        Listeners.executeStep(() ->melcom.searchItemVisibility(),
                "ðŸ§ªSearched item should be visible");

        Listeners.executeStep(() ->melcom.tapSearchedItem(),
                "ðŸ‘†Tap on searched item");

        Listeners.logTestStart("ðŸ”ŽVerify Quick Add Button On selected item Screen");
Thread.sleep(2000);
        Listeners.executeStep(() ->melcom.searchItemVisibilityDetail(),
                "ðŸ§ªThe selected item's name and price should match the description previously shown in the search results.");

//        Listeners.executeStep(() ->melcom.AddButtonFunc(),
//                "ðŸ‘†Tap on the Add button on the searched item");

        Listeners.executeStep(() ->melcom.priceCompare(),
                "ðŸ§ªThe itemâ€™s price should match the price displayed on the â€˜View Orderâ€™ button.");

    Listeners.logTestStart("ðŸ”ŽVerify Increase Quantity Button for Quick Add button");

            Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().className(\"android.widget.ImageView\").instance(2)")).click(),
                    "ðŸ‘†Tap on increase button on the selected item");

            Listeners.executeStep(() ->melcom.increaseItemConfirm(),
                    "ðŸ§ªThe price of the selected item should double when the increase button is tapped");

            Listeners.logTestStart("ðŸ”ŽVerify Decrease Quantity Button for Quick Add button");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().className(\"android.widget.ImageView\").instance(1)")).click(),
                "ðŸ‘†Tap on decrease button on the selected item");

        Listeners.executeStep(() ->melcom.decreaseItemConfirm(),
                "ðŸ§ªThe price of the selected item should decrease when the decrease button is tapped");

        Listeners.logTestStart("ðŸ”ŽVerify View Order Functionalities");


        Listeners.executeStep(() ->melcom.AddButtonFunc(),
               "ðŸ‘†Tap on the Add button on the searched item");

        Listeners.executeStep(() ->melcom.viewOrderClick(),
                "ðŸ‘†Tap on View Order button");

        Listeners.executeStep(() ->melcom.closedShop(),
                "ðŸ‘†If shop is closed,tap of SCHEDULE DELIVERY button");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Confirm Order\")")).isDisplayed(),
                "ðŸ§ª'Confirm Order' heading should be visible on Order screen ");

Thread.sleep(1000);

        Listeners.executeStep(() ->melcom.priceOnViewOrderScreen(),
                "ðŸ§ªThe price on the Order Screen should match the price of the item selected");

        Listeners.executeStep(() ->melcom.orderTotalPrice(),
                "ðŸ§ªThe sum of the delivery fee and the subtotal should equal the total amount.");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Deliver later\")")).click(),
                "ðŸ‘†Tap on Deliver Later Button on 'Confirm Order' Screen");

Listeners.logTestStart("ðŸ”Ž Verify Delivery Feature ");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"When do you want your order delivered?\")")).isDisplayed(),
                "ðŸ§ªHeading 'When do you want your order delivered?' should be visible ");

        //scheduling Delivery

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"Tomorrow\")")).click(),
                "ðŸ‘†Tapping on 'Tomorrow' on when to deliver time frame screen ");

        Listeners.executeStep(() ->driver.findElements(AppiumBy.xpath("//android.view.View[@index=1]")).get(1).click(),
                "ðŸ‘†Tapping on the second option under 'Tomorrow' on when to deliver time frame screen");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"CONFIRM\")")).click(),
                "ðŸ‘†Tapping on 'Confirm' button ");

        Thread.sleep(1000);
        Listeners.executeStep(() ->melcom.scroll(500,905,0,0,"down"),
                "ðŸ“œScroll down");

        Listeners.executeStep(() -> driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().description(\"LOOKS GOOD\")")).click(),
                "ðŸ‘†Tap on LOOKS GOOD button on Confirm Order screen");

        Listeners.logTestStart("ðŸ”ŽVerify the Checkout Feature");
        //Checking for checkout feature
        UnifiedCheckout.checkout();

            Listeners.logTestStart("ðŸ”ŽVerify Item Deletion from the Cart");

        Listeners.executeStep(() ->circleAllGroceries.viewOrderDeleteAfterCheckoutpharm(),
                "ðŸ“œClear the cart if an item is pending in the cart.");

        Listeners.executeStep(() ->circleAllGroceries.clearOrder(),
                "ðŸ‘†Tap on clear Order is that pop up is visible");

    }
}
